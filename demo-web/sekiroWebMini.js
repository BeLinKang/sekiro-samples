function SekiroClient(e){if(this.wsURL=e,this.handlers={},this.socket={},!e)throw new Error("wsURL can not be empty!!");this.webSocketFactory=this.resolveWebSocketFactory(),this.connect()}SekiroClient.prototype.resolveWebSocketFactory=function(){if("object"==typeof window){var e=window.WebSocket?window.WebSocket:window.MozWebSocket;return function(t){function o(t){this.mSocket=new e(t)}return o.prototype.close=function(){this.mSocket.close()},o.prototype.onmessage=function(e){this.mSocket.onmessage=e},o.prototype.onopen=function(e){this.mSocket.onopen=e},o.prototype.onclose=function(e){this.mSocket.onclose=e},o.prototype.send=function(e){this.mSocket.send(e)},new o(t)}}if("object"==typeof weex)try{console.log("test webSocket for weex");var t=weex.requireModule("webSocket");return console.log("find webSocket for weex:"+t),function(e){try{t.close()}catch(o){}return t.WebSocket(e,""),t}}catch(o){console.log(o)}if("object"==typeof WebSocket)return function(t){return new e(t)};throw new Error("the js environment do not support websocket")},SekiroClient.prototype.connect=function(){console.log("sekiro: begin of connect to wsURL: "+this.wsURL);var e=this;try{this.socket=this.webSocketFactory(this.wsURL)}catch(t){console.log("sekiro: create connection failed,reconnect after 2s"),setTimeout(function(){e.connect()},2e3)}this.socket.onmessage(function(t){e.handleSekiroRequest(t.data)}),this.socket.onopen(function(e){console.log("sekiro: open a sekiro client connection")}),this.socket.onclose(function(t){console.log("sekiro: disconnected ,reconnection after 2s"),setTimeout(function(){e.connect()},2e3)})},SekiroClient.prototype.handleSekiroRequest=function(e){console.log("receive sekiro request: "+e);var t=JSON.parse(e),o=t.__sekiro_seq__;if(!t.action)return void this.sendFailed(o,"need request param {action}");var n=t.action;if(!this.handlers[n])return void this.sendFailed(o,"no action handler: "+n+" defined");var r=this.handlers[n],i=this;try{r(t,function(e){try{i.sendSuccess(o,e)}catch(t){i.sendFailed(o,"e:"+t)}},function(e){i.sendFailed(o,e)})}catch(s){console.log("error: "+s),i.sendFailed(o,":"+s)}},SekiroClient.prototype.sendSuccess=function(e,t){var o;if("string"==typeof t)try{o=JSON.parse(t)}catch(n){o={},o.data=t}else"object"==typeof t?o=t:(o={},o.data=t);(Array.isArray(o)||"string"==typeof o)&&(o={data:o,code:0}),o.code?o.code=0:o.status?o.status=0:o.status=0,o.__sekiro_seq__=e;var r=JSON.stringify(o);console.log("response :"+r),this.socket.send(r)},SekiroClient.prototype.sendFailed=function(e,t){"string"!=typeof t&&(t=JSON.stringify(t));var o={};o.message=t,o.status=-1,o.__sekiro_seq__=e;var n=JSON.stringify(o);console.log("sekiro: response :"+n),this.socket.send(n)},SekiroClient.prototype.registerAction=function(e,t){if("string"!=typeof e)throw new Error("an action must be string");if("function"!=typeof t)throw new Error("a handler must be function");return console.log("sekiro: register action: "+e),this.handlers[e]=t,this};